# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11
        environment:
          GO111MODULE: "on"

    working_directory: /go/src/github.com/nilslice/protolock
    steps:
      - checkout
      # fetch depenencies, test code
      - run: go get -v -t -d ./...
      - run: go test -v -race ./...
      # install binary, test commands
      - run: go install ./...
      - run: protolock
      - run: stat proto.lock
      - run: cat proto.lock | grep "testdata:/:test.proto"
      - run: protolock status
      - run: protolock commit
      - run:
          name: check output using plugin-sample
          command: |
            WARNINGS=$(protolock status --plugins=plugin-sample | wc -l)
            if [ "$WARNINGS" -ne 2 ]; then
              exit
            fi
      - run: 
          name: check output using plugin-sample-error
          command: |
            protolock status --plugins=plugin-sample-error | grep "some error"
      - run: 
          name: check output using multiple plugins, with one error expected
          command: |
            ERR=$(protolock status --plugins=plugin-sample,plugin-sample-error)
            echo $ERR | grep "some error"
            REV=$(protolock status --plugins=plugin-sample-error,plugin-sample)
            echo $REV | grep "some error"
      - run: 
          name: check output using multiple plugins with errors
          command: |
            ERRS=$(protolock status --plugins=plugin-sample-error,plugin-sample-error | grep "some error" | wc -l)
            if [ "$ERRS" -ne 2 ]; then
              exit 1
            fi
            MOREERRS=$(protolock status --plugins=plugin-sample-error,plugin-sample-error,plugin-sample-error | grep "some error" | wc -l)
            if [ "$MOREERRSERRS" -ne 3 ]; then
              exit 1
            fi


